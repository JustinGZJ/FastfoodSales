<UserControl x:Class="DAQ.HomeView" Foreground="DarkGray"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DAQ"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             mc:Ignorable="d" 
        
             xmlns:s="https://github.com/canton7/Stylet"
             d:DesignHeight="1600" d:DesignWidth="1000"
              d:DataContext="{d:DesignInstance  local:HomeViewModel}"
             >
    <UserControl.Resources>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow" >
                        <Setter Property="Background" Value="LightBlue" />
                        <Style.Triggers>
                            <DataTrigger  Binding="{Binding OK数据结果}"  Value="0">
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                            <DataTrigger  Binding="{Binding OK数据结果}"  Value="1">
                                <Setter Property="Foreground" Value="LimeGreen"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource MaterialDesignSelection}"/>
            <Setter Property="md:DataGridAssist.AutoGeneratedCheckBoxStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type CheckBox}">
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="IsHitTestVisible" Value="False"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type CheckBox}">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
                                <Setter Property="Validation.ErrorTemplate">
                                    <Setter.Value>
                                        <ControlTemplate/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type CheckBox}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="Click">
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Viewbox FlowDirection="LeftToRight" Height="18" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="18">
                                                    <Canvas Height="24" Width="24">
                                                        <Path x:Name="Graphic" Data="M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3 M19,5L19,19 5,19 5,5 19,5z" Fill="{DynamicResource MaterialDesignCheckBoxOff}"/>
                                                        <Ellipse x:Name="InteractionEllipse" Fill="{TemplateBinding Foreground}" Height="0" IsHitTestVisible="False" Canvas.Left="12" Opacity="0" RenderTransformOrigin="0.5,0.5" Canvas.Top="12" Width="0">
                                                            <Ellipse.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform/>
                                                                    <SkewTransform/>
                                                                    <RotateTransform/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </Ellipse.RenderTransform>
                                                        </Ellipse>
                                                    </Canvas>
                                                </Viewbox>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <EventTrigger RoutedEvent="ButtonBase.Click">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <Trigger Property="HasContent" Value="True">
                                                    <Setter Property="FocusVisualStyle">
                                                        <Setter.Value>
                                                            <Style>
                                                                <Setter Property="Control.Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Padding" Value="4,2,0,0"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                    <Setter Property="Opacity" Value="0.26"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True"/>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="Graphic" Value="M10,17L5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                                                    <Setter Property="Fill" TargetName="Graphic" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="{x:Null}">
                                                    <Setter Property="Data" TargetName="Graphic" Value="M10,17L5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                                                    <Setter Property="Opacity" TargetName="Graphic" Value="0.56"/>
                                                </Trigger>
                                                <Trigger Property="Validation.HasError" Value="True">
                                                    <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource ValidationErrorBrush}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ValidationErrorBrush}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="md:DataGridAssist.AutoGeneratedEditingCheckBoxStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type CheckBox}">
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type CheckBox}">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
                                <Setter Property="Validation.ErrorTemplate">
                                    <Setter.Value>
                                        <ControlTemplate/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type CheckBox}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="Click">
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Viewbox FlowDirection="LeftToRight" Height="18" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="18">
                                                    <Canvas Height="24" Width="24">
                                                        <Path x:Name="Graphic" Data="M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3 M19,5L19,19 5,19 5,5 19,5z" Fill="{DynamicResource MaterialDesignCheckBoxOff}"/>
                                                        <Ellipse x:Name="InteractionEllipse" Fill="{TemplateBinding Foreground}" Height="0" IsHitTestVisible="False" Canvas.Left="12" Opacity="0" RenderTransformOrigin="0.5,0.5" Canvas.Top="12" Width="0">
                                                            <Ellipse.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform/>
                                                                    <SkewTransform/>
                                                                    <RotateTransform/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </Ellipse.RenderTransform>
                                                        </Ellipse>
                                                    </Canvas>
                                                </Viewbox>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <EventTrigger RoutedEvent="ButtonBase.Click">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <Trigger Property="HasContent" Value="True">
                                                    <Setter Property="FocusVisualStyle">
                                                        <Setter.Value>
                                                            <Style>
                                                                <Setter Property="Control.Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Padding" Value="4,2,0,0"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                    <Setter Property="Opacity" Value="0.26"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True"/>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="Graphic" Value="M10,17L5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                                                    <Setter Property="Fill" TargetName="Graphic" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="{x:Null}">
                                                    <Setter Property="Data" TargetName="Graphic" Value="M10,17L5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                                                    <Setter Property="Opacity" TargetName="Graphic" Value="0.56"/>
                                                </Trigger>
                                                <Trigger Property="Validation.HasError" Value="True">
                                                    <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource ValidationErrorBrush}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ValidationErrorBrush}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="md:DataGridAssist.AutoGeneratedEditingTextStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Margin" Value="0,0,0,-5"/>
                        <Setter Property="BorderThickness" Value="0,0,0,2"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate/>
                            </Setter.Value>
                        </Setter>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                <Setter Property="md:TextFieldAssist.TextBoxViewMargin" Value="0,0,1,0"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="AllowDrop" Value="True"/>
                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                <Setter Property="Validation.ErrorTemplate">
                                    <Setter.Value>
                                        <ControlTemplate/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="md:TextFieldAssist.IncludeSpellingSuggestions" Value="{Binding (SpellCheck.IsEnabled), RelativeSource={RelativeSource Self}}"/>
                                <Setter Property="md:TextFieldAssist.NewSpecHighlightingEnabled" Value="False"/>
                                <Setter Property="md:TextFieldAssist.RippleOnFocusEnabled" Value="False"/>
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu>
                                            <MenuItem Command="ApplicationCommands.Cut">
                                                <MenuItem.Icon>
                                                    <md:PackIcon Kind="Clip"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Command="ApplicationCommands.Copy">
                                                <MenuItem.Icon>
                                                    <md:PackIcon Kind="ContentCopy"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Command="ApplicationCommands.Paste">
                                                <MenuItem.Icon>
                                                    <md:PackIcon Kind="ContentPaste"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate/>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                                            <Condition Property="IsSelectionActive" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="md:DataGridAssist.EnableEditBoxAssist" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="ApplicationCommands.SelectAll" Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                                                <Button.Visibility>
                                                    <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                        <Binding.ConverterParameter>
                                                            <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                        </Binding.ConverterParameter>
                                                    </Binding>
                                                </Button.Visibility>
                                            </Button>
                                            <Border BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0,0,0,1" Grid.Column="1">
                                                <Border.Visibility>
                                                    <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                        <Binding.ConverterParameter>
                                                            <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                        </Binding.ConverterParameter>
                                                    </Binding>
                                                </Border.Visibility>
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"/>
                                            </Border>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="True"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <md:TransitioningContent OpeningEffect="{md:TransitionEffect Kind=SlideInFromRight, Duration=00:00:0.5}">
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid >
                        <md:Card Height="240" Margin="20" Padding="20">
                            <DockPanel  LastChildFill="True">
                                <Grid DockPanel.Dock="Top" >
                                    <Border Margin="0 10"  BorderThickness="0 0 0 1" BorderBrush="DarkGray">
                                        <TextBlock FontSize="16" FontWeight="Bold">STATISTICS</TextBlock>
                                    </Border>
                                </Grid>
                                <Grid >
                                    <lvc:CartesianChart FontSize="20" >
                                        <lvc:CartesianChart.Series>
                                            <lvc:StackedColumnSeries   Fill="#FF7DE87D"    DataLabels="True" Title="PASS" StackMode="Percentage"  Values="{Binding Plc.PassValues, Mode=OneWay}" Foreground="Black"></lvc:StackedColumnSeries>
                                            <lvc:StackedColumnSeries  Fill="Red" DataLabels="True" Title="FAIL" StackMode="Percentage" Values="{Binding Plc.FailValues, Mode=OneWay}" Foreground="Black"></lvc:StackedColumnSeries>
                                        </lvc:CartesianChart.Series>
                                        <lvc:CartesianChart.AxisX>
                                            <lvc:Axis 
                                             Labels="{Binding Labels}" LabelsRotation="-45">
                                                <lvc:Axis.Separator>
                                                    <lvc:Separator Step="1"></lvc:Separator>
                                                </lvc:Axis.Separator>
                                            </lvc:Axis>
                                        </lvc:CartesianChart.AxisX>
                                        <lvc:CartesianChart.AxisY>
                                            <lvc:Axis ShowLabels="False"></lvc:Axis>
                                        </lvc:CartesianChart.AxisY>
                                    </lvc:CartesianChart>
                                </Grid>
                            </DockPanel>
                        </md:Card>
                    </Grid>
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <md:Card Grid.Row="0" Grid.Column="0" Margin="20" Padding="20">
                        <StackPanel>
                            <Border Margin="0 10" BorderThickness="0 0 0 1" BorderBrush="DarkGray">
                                <TextBlock FontSize="16" FontWeight="Bold">TH9320</TextBlock>
                            </Border>
                            <Grid Margin="20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel LastChildFill="True">
                                    <md:PackIcon Margin="10 0"  DockPanel.Dock="Left" Kind="AlphaVBox" Foreground="#FF2381CF" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                                    <TextBox Text="{Binding TH9320.Mainvalue , Mode=OneWay}"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Voltage" IsReadOnly="True" Grid.ColumnSpan="2" Foreground="#FF2196F3"></TextBox>
                                </DockPanel>
                                <DockPanel Grid.Column="1" LastChildFill="True">
                                    <md:PackIcon Margin="10 0" DockPanel.Dock="Left" Kind="AlphaRBox" Foreground="#FF2381CF" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                                    <TextBox  Text="{Binding TH9320.Subvalue, Mode=OneWay}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Resistance" IsReadOnly="True" Grid.ColumnSpan="2" Foreground="#FF2196F3"></TextBox>
                                </DockPanel>
                            </Grid>
                        </StackPanel>
                    </md:Card>
                    <md:Card Grid.Row="0" Grid.Column="1" Margin="20" Padding="20">
                        <StackPanel>
                            <Border Margin="0 10" BorderThickness="0 0 0 1" BorderBrush="DarkGray">
                                <TextBlock FontSize="16" FontWeight="Bold">RM3545</TextBlock>
                                <!--<Button Command="{s:Action Save}">hello</Button>-->
                            </Border>
                            <Grid Margin="20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel LastChildFill="True">
                                    <md:PackIcon Margin="10 0" DockPanel.Dock="Left" Kind="AlphaRBox" Foreground="#FF2381CF" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                                    <TextBox  Text="{Binding RM3545.TestSpecs[0].Value, Mode=OneWay}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Resistance" IsReadOnly="True" Grid.ColumnSpan="2" Foreground="#FF2196F3"></TextBox>
                                </DockPanel>
                                <DockPanel Grid.Column="1" LastChildFill="True">
                                    <md:PackIcon Margin="10 0" DockPanel.Dock="Left" Kind="AlphaRBox" Foreground="#FF2381CF" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                                    <TextBox  Text="{Binding RM3545.TestSpecs[1].Value, Mode=OneWay}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Resistance" IsReadOnly="True" Grid.ColumnSpan="2" Foreground="#FF2196F3"></TextBox>
                                </DockPanel>
                                <DockPanel Grid.Column="2" LastChildFill="True">
                                    <md:PackIcon Margin="10 0" DockPanel.Dock="Left" Kind="AlphaRBox" Foreground="#FF2381CF" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                                    <TextBox Text="{Binding RM3545.TestSpecs[2].Value, Mode=OneWay}"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Resistance" IsReadOnly="True" Grid.ColumnSpan="2" Foreground="#FF2196F3"></TextBox>
                                </DockPanel>
                            </Grid>
                        </StackPanel>
                    </md:Card>
                    <md:Card Grid.Row="1" Grid.Column="0" Padding="20" Margin="20">
                        <StackPanel>
                            <Border Margin="0 10" BorderThickness="0 0 0 1" BorderBrush="DarkGray">
                                <TextBlock FontSize="16" FontWeight="Bold">TH2775</TextBlock>
                            </Border>
                            <Grid Margin="20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel LastChildFill="True">
                                    <md:PackIcon Margin="10 0" DockPanel.Dock="Left" Kind="AlphaLBox" Foreground="#FF2381CF" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                                    <TextBox Text="{Binding TH2775B.TestSpecs[0].Value, Mode=OneWay}"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Inductance" IsReadOnly="True" Grid.ColumnSpan="2" Foreground="#FF2196F3"></TextBox>
                                </DockPanel>
                                <DockPanel LastChildFill="True" Grid.Column="1">
                                    <md:PackIcon Margin="10 0" DockPanel.Dock="Left" Kind="AlphaLBox" Foreground="#FF2381CF" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                                    <TextBox Text="{Binding TH2775B.TestSpecs[1].Value, Mode=OneWay}"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Inductance" IsReadOnly="True" Grid.ColumnSpan="2" Foreground="#FF2196F3"></TextBox>
                                </DockPanel>
                                <DockPanel LastChildFill="True" Grid.Column="2">
                                    <md:PackIcon Margin="10 0" DockPanel.Dock="Left" Kind="AlphaLBox" Foreground="#FF2381CF" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                                    <TextBox Text="{Binding TH2775B.TestSpecs[2].Value, Mode=OneWay}"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Inductance" IsReadOnly="True" Grid.ColumnSpan="2" Foreground="#FF2196F3"></TextBox>
                                </DockPanel>
                            </Grid>
                        </StackPanel>
                    </md:Card>
                    <md:Card Grid.Row="1" Grid.Column="1" Padding="20" Margin="20">
                        <StackPanel>
                            <Border Margin="0 10" BorderThickness="0 0 0 1" BorderBrush="DarkGray">
                                <TextBlock FontSize="16" FontWeight="Bold">TH2882A</TextBlock>
                            </Border>
                            <Grid Margin="20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel LastChildFill="True">
                                    <md:PackIcon Margin="10 0" DockPanel.Dock="Left" Kind="AlphaABox" Foreground="#FF2381CF" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                                    <TextBox Text="{Binding TH2882A.Values[0], Mode=OneWay}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Area" IsReadOnly="True" Grid.ColumnSpan="2" Foreground="#FF2196F3"></TextBox>
                                </DockPanel>
                                <DockPanel Grid.Column="1" LastChildFill="True">
                                    <md:PackIcon Margin="10 0" DockPanel.Dock="Left" Kind="AlphaABox" Foreground="#FF2381CF" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                                    <TextBox  Text="{Binding TH2882A.Values[5], Mode=OneWay}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Area" IsReadOnly="True" Grid.ColumnSpan="2" Foreground="#FF2196F3"></TextBox>
                                </DockPanel>
                                <DockPanel Grid.Column="2" LastChildFill="True">
                                    <md:PackIcon Margin="10 0" DockPanel.Dock="Left" Kind="AlphaABox" Foreground="#FF2381CF" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
                                    <TextBox Text="{Binding TH2882A.Values[10], Mode=OneWay}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Area" IsReadOnly="True" Grid.ColumnSpan="2" Foreground="#FF2196F3"></TextBox>
                                </DockPanel>
                            </Grid>
                        </StackPanel>
                    </md:Card>
                </Grid>
                <Grid Grid.Row="1">
                    <md:Card Margin="20">
                        <DataGrid  Height="400" HorizontalScrollBarVisibility="Visible"
                          Margin="0 8 0 0"
                          ItemsSource="{Binding Plc.PLC_FINAL_DATAS}"
                          CanUserSortColumns="False"
                          IsReadOnly="True"      
                          CanUserAddRows="False" Style="{DynamicResource DataGridStyle1}" >
                        </DataGrid>
                    </md:Card>
                </Grid>
                <Grid Grid.Row="3" Margin="20 0" Height="400">
                    <md:Card Padding="20" VerticalAlignment="Stretch">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" DockPanel.Dock="Top" Margin="0 10" BorderThickness="0 0 0 1" BorderBrush="DarkGray">
                                <TextBlock FontSize="16" FontWeight="Bold">Message</TextBlock>
                            </Border>
                            <ContentControl Grid.Row="1" s:View.Model="{Binding Msg}" />
                        </Grid>
                    </md:Card>
                </Grid>
            </Grid>
        </ScrollViewer>
    </md:TransitioningContent>
</UserControl>
